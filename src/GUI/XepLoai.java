/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import DAO.ChiTietHanhKiemDAO;
import DAO.DiemDAO;
import DAO.HanhKiemDAO;
import DAO.HocKyDAO;
import DAO.HocSinhDAO;
import Entity.ChiTietHanhKiem;
import Entity.Diem;
import Entity.HanhKiem;
import Entity.HocKy;
import Entity.HocSinh;
import Entity.Mon;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.JLabel;
import java.awt.Font;
import javax.swing.GroupLayout.Alignment;
import javax.swing.GroupLayout;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.JComboBox;
import javax.swing.JTextField;
import javax.swing.JButton;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;

/**
 *
 * @author L
 */
public class XepLoai extends javax.swing.JFrame {

	DefaultTableModel model = null;

	/**
	 * Creates new form XepLoai
	 */
	public XepLoai() {
		initComponents();
		setResizable(false);
		jcb_hocky.removeAllItems();
		List<HocKy> dshk = HocKyDAO.layDanhSachHocKy();
		for (int i = 0; i < dshk.size(); i ++) {
			jcb_hocky.addItem(dshk.get(i).getmahocky().toString());

		}
		LoadData();
	}

	/**
	 * This method is called from within the constructor to initialize the form.
	 * WARNING: Do NOT modify this code. The content of this method is always
	 * regenerated by the Form Editor.
	 */
	@SuppressWarnings("unchecked")
	// <editor-fold defaultstate="collapsed" desc="Generated
	// Code">//GEN-BEGIN:initComponents
	private void initComponents() {

		jPanel1 = new javax.swing.JPanel();
		jLabel1 = new javax.swing.JLabel();
		jScrollPane1 = new javax.swing.JScrollPane();
		jtb_dshocsinh = new javax.swing.JTable();
		jtb_dshocsinh.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent arg0) {
				int index = jtb_dshocsinh.getSelectedRow();
				jtf_mahocsinh.setText((String) (model.getValueAt(index, 0)));

				if (!model.getValueAt(index, 4).equals("")) {
					jcb_hanhkiem.setSelectedItem((String) (model.getValueAt(index, 4)));

				}

			}
		});
		jPanel2 = new javax.swing.JPanel();
		jbt_timkiem = new javax.swing.JButton();
		jLabel2 = new javax.swing.JLabel();
		jtf_lop = new javax.swing.JTextField();
		jLabel3 = new javax.swing.JLabel();
		jcb_hocky = new javax.swing.JComboBox();
		jbtn_thoat2 = new javax.swing.JButton();

		setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
		setTitle("Xếp Loại");
		setPreferredSize(new java.awt.Dimension(840, 490));

		jLabel1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
		jLabel1.setText("Xếp Loại");

		jtb_dshocsinh.setModel(new javax.swing.table.DefaultTableModel(
				new Object[][] { { null, null, null, null, null }, { null, null, null, null, null },
						{ null, null, null, null, null }, { null, null, null, null, null } },
				new String[] { "Mã học sinh", "Họ Tên", "Lớp", "TB Học Kỳ 1", "Hạnh Kiểm", "Xếp loại" }) {
			Class[] types = new Class[] { java.lang.Integer.class, java.lang.String.class, java.lang.String.class,
					java.lang.Float.class, java.lang.Float.class };

			public Class getColumnClass(int columnIndex) {
				return types[columnIndex];
			}
		});
		jScrollPane1.setViewportView(jtb_dshocsinh);

		jPanel2.setBackground(new java.awt.Color(255, 255, 255));

		jbt_timkiem.setBackground(new java.awt.Color(255, 51, 0));
		jbt_timkiem.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
		jbt_timkiem.setText("Tìm Kiếm");
		jbt_timkiem.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jbt_timkiemActionPerformed(evt);
			}
		});

		jLabel2.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
		jLabel2.setText("Nhập thông tin: tên lớp cần tìm");

		jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
		jLabel3.setText("Lớp");

		jcb_hocky.addItemListener(new java.awt.event.ItemListener() {
			public void itemStateChanged(java.awt.event.ItemEvent evt) {
				jcb_hockyItemStateChanged(evt);
			}
		});

		jbtn_thoat2.setBackground(new java.awt.Color(255, 102, 0));
		jbtn_thoat2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
		jbtn_thoat2.setText("Thoát");
		jbtn_thoat2.setToolTipText("");
		jbtn_thoat2.setMaximumSize(new java.awt.Dimension(95, 23));
		jbtn_thoat2.setMinimumSize(new java.awt.Dimension(95, 23));
		jbtn_thoat2.setPreferredSize(new java.awt.Dimension(95, 23));
		jbtn_thoat2.addActionListener(new java.awt.event.ActionListener() {
			public void actionPerformed(java.awt.event.ActionEvent evt) {
				jbtn_thoat2ActionPerformed(evt);
			}
		});

		JLabel lblNmHc = new JLabel();
		lblNmHc.setText("Học Kỳ");
		lblNmHc.setFont(new Font("Tahoma", Font.BOLD, 12));

		lblHnhKim = new JLabel();
		lblHnhKim.setText("Hạnh kiểm");
		lblHnhKim.setFont(new Font("Tahoma", Font.BOLD, 12));

		jcb_hanhkiem = new JComboBox();

		JLabel lblMHcSinh = new JLabel();
		lblMHcSinh.setText("Mã học sinh");
		lblMHcSinh.setFont(new Font("Tahoma", Font.BOLD, 12));

		jtf_mahocsinh = new JTextField();
		jtf_mahocsinh.setEnabled(false);

		JButton jbtn_xeploai = new JButton();
		jbtn_xeploai.addMouseListener(new MouseAdapter() {
			@Override
			public void mouseClicked(MouseEvent e) {
				jbtn_xepLoaiMouseClicked(e);

			}
		});
		jbtn_xeploai.setToolTipText("");
		jbtn_xeploai.setText("Xếp loại");
		jbtn_xeploai.setPreferredSize(new Dimension(95, 23));
		jbtn_xeploai.setMinimumSize(new Dimension(95, 23));
		jbtn_xeploai.setMaximumSize(new Dimension(95, 23));
		jbtn_xeploai.setFont(new Font("Tahoma", Font.BOLD, 12));
		jbtn_xeploai.setBackground(new Color(255, 102, 0));

		javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
		jPanel2Layout.setHorizontalGroup(jPanel2Layout.createParallelGroup(Alignment.TRAILING)
				.addGroup(jPanel2Layout.createSequentialGroup().addGap(57)
						.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING).addComponent(jLabel2)
								.addGroup(jPanel2Layout.createSequentialGroup()
										.addGroup(jPanel2Layout.createParallelGroup(Alignment.TRAILING)
												.addGroup(jPanel2Layout.createSequentialGroup().addComponent(jLabel3)
														.addGap(34).addComponent(jtf_lop, GroupLayout.PREFERRED_SIZE,
																172, GroupLayout.PREFERRED_SIZE))
												.addGroup(Alignment.LEADING,
														jPanel2Layout.createSequentialGroup().addComponent(lblMHcSinh)
																.addPreferredGap(ComponentPlacement.UNRELATED)
																.addComponent(jtf_mahocsinh, GroupLayout.PREFERRED_SIZE,
																		172, GroupLayout.PREFERRED_SIZE)))
										.addPreferredGap(ComponentPlacement.RELATED)
										.addGroup(
												jPanel2Layout.createParallelGroup(Alignment.TRAILING)
														.addGroup(jPanel2Layout.createSequentialGroup()
																.addComponent(jbt_timkiem).addGap(51)
																.addComponent(lblNmHc).addGap(18))
														.addGroup(jPanel2Layout.createSequentialGroup()
																.addComponent(lblHnhKim)
																.addPreferredGap(ComponentPlacement.UNRELATED)))
										.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
												.addComponent(jcb_hocky, GroupLayout.PREFERRED_SIZE, 163,
														GroupLayout.PREFERRED_SIZE)
												.addComponent(jcb_hanhkiem, GroupLayout.PREFERRED_SIZE, 163,
														GroupLayout.PREFERRED_SIZE))
										.addGap(41)
										.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
												.addComponent(jbtn_xeploai, GroupLayout.PREFERRED_SIZE, 95,
														GroupLayout.PREFERRED_SIZE)
												.addComponent(jbtn_thoat2, GroupLayout.PREFERRED_SIZE,
														GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
						.addContainerGap(40, Short.MAX_VALUE)));
		jPanel2Layout.setVerticalGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING).addGroup(jPanel2Layout
				.createSequentialGroup().addContainerGap().addComponent(jLabel2)
				.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
						.addGroup(jPanel2Layout.createSequentialGroup().addGap(2).addComponent(jLabel3))
						.addComponent(jbt_timkiem, GroupLayout.PREFERRED_SIZE, 23, GroupLayout.PREFERRED_SIZE)
						.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
								.addComponent(jtf_lop, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
										GroupLayout.PREFERRED_SIZE)
								.addComponent(jcb_hocky, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
										GroupLayout.PREFERRED_SIZE)
								.addComponent(jbtn_thoat2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE,
										GroupLayout.PREFERRED_SIZE)
								.addComponent(lblNmHc, GroupLayout.PREFERRED_SIZE, 15, GroupLayout.PREFERRED_SIZE)))
				.addGroup(jPanel2Layout.createParallelGroup(Alignment.LEADING)
						.addGroup(jPanel2Layout.createSequentialGroup().addGap(9)
								.addGroup(jPanel2Layout.createParallelGroup(Alignment.TRAILING)
										.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
												.addComponent(jcb_hanhkiem, GroupLayout.PREFERRED_SIZE,
														GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
												.addComponent(lblHnhKim, GroupLayout.PREFERRED_SIZE, 15,
														GroupLayout.PREFERRED_SIZE))
										.addGroup(jPanel2Layout.createParallelGroup(Alignment.BASELINE)
												.addComponent(lblMHcSinh, GroupLayout.PREFERRED_SIZE, 15,
														GroupLayout.PREFERRED_SIZE)
												.addComponent(jtf_mahocsinh, GroupLayout.PREFERRED_SIZE,
														GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))))
						.addGroup(jPanel2Layout.createSequentialGroup().addPreferredGap(ComponentPlacement.RELATED)
								.addComponent(jbtn_xeploai, GroupLayout.PREFERRED_SIZE, 23,
										GroupLayout.PREFERRED_SIZE)))
				.addGap(18)));
		jPanel2.setLayout(jPanel2Layout);

		javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
		jPanel1Layout.setHorizontalGroup(
			jPanel1Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
					.addGroup(jPanel1Layout.createParallelGroup(Alignment.LEADING)
						.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 831, GroupLayout.PREFERRED_SIZE)
						.addComponent(jPanel2, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
						.addGroup(jPanel1Layout.createSequentialGroup()
							.addGap(391)
							.addComponent(jLabel1)))
					.addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
		);
		jPanel1Layout.setVerticalGroup(
			jPanel1Layout.createParallelGroup(Alignment.LEADING)
				.addGroup(jPanel1Layout.createSequentialGroup()
					.addComponent(jLabel1)
					.addGap(1)
					.addComponent(jPanel2, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
					.addGap(18)
					.addComponent(jScrollPane1, GroupLayout.PREFERRED_SIZE, 334, GroupLayout.PREFERRED_SIZE))
		);
		jPanel1.setLayout(jPanel1Layout);

		javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
		getContentPane().setLayout(layout);
		layout.setHorizontalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));
		layout.setVerticalGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING).addComponent(
				jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE));

		pack();
		setLocationRelativeTo(null);
	}// </editor-fold>//GEN-END:initComponents

	private void jbtn_xepLoaiMouseClicked(java.awt.event.MouseEvent evt) {// GEN-FIRST:event_jrb_mahocsinhMouseClicked
		// TODO add your handling code here:

		int mahanhkiem = jcb_hanhkiem.getSelectedIndex();
		String mahocsinh = jtf_mahocsinh.getText().toString().trim();
		String hocky = jcb_hocky.getSelectedItem().toString().trim();
		String malop =HocSinhDAO.layThongTinHocSinh(mahocsinh).get(0).getlop();
		
		  ChiTietHanhKiem cthk = new ChiTietHanhKiem(mahanhkiem + 1, mahocsinh,malop,hocky);
		 
		
		  if (ChiTietHanhKiemDAO.themChiTietHanhKiem(cthk).equals("true")) {
			  JOptionPane.showMessageDialog(this,
					  "Xếp hạnh kiểm thành công", "Thông báo",
					  JOptionPane.INFORMATION_MESSAGE);
		  LoadData(); 
		  }
		  else 
		  { JOptionPane.showMessageDialog(this,
		  "Xếp loại thất bại, vui lòng thử lại", "Thông báo",
		  JOptionPane.WARNING_MESSAGE);
		  
		  }
		 

	}// GEN-LAST:event_jrb_mahocsinhMouseClicked

	void LoadData() {
	
		List<HanhKiem> dsHanhkiem = HanhKiemDAO.findAll();
		
		for (int i = 0; i < dsHanhkiem.size(); i++) {
			jcb_hanhkiem.addItem(dsHanhkiem.get(i).gettenhanhkiem().toString());

		}
		String hocky = jcb_hocky.getSelectedItem().toString().trim();
		List<HocSinh> listResultSV;
		String[] columns = new String[] { "Mã học sinh", "Họ Tên", "Lớp", "TB: "+jcb_hocky.getSelectedItem(), "Hạnh Kiểm", "Xếp Loại" };
		model = new DefaultTableModel(null, columns);

		listResultSV = HocSinhDAO.layDanhSachHocSinh();

		for (int i = 0; i < listResultSV.size(); i++) {
			HocSinh hs = (HocSinh) listResultSV.get(i);

			
			List<Diem> DiemHS1 = DiemDAO.DiemCuaHocSinh(hs.getmahocsinh(), hocky);
			float tdhk1 = 0;
			float dtbhk1 = 0;
			if (DiemHS1.size() > 0) {
				for (int j = 0; j < DiemHS1.size(); j++) {
					Diem diem = (Diem) DiemHS1.get(j);
					tdhk1 += diem.getDiemtbmon();
				}

				if (DiemHS1.size() > 0)
					dtbhk1 = tdhk1 / DiemHS1.size();
			}

			/*
			 * String hk2 = hocky+"_HK2"; List<Diem> DiemHS2 =
			 * DiemDAO.DiemCuaHocSinh(hs.getmahocsinh(),hk2); float tdhk2 = 0; float dtbhk2
			 * = 0 ; if(DiemHS2.size() > 0) { for(int j = 0; j < DiemHS2.size(); j++ ) {
			 * Diem diem = (Diem) DiemHS2.get(j); tdhk2 += diem.getDiemtbmon(); } dtbhk2 =
			 * tdhk2/DiemHS2.size(); }
			 */
			List<ChiTietHanhKiem> hk = ChiTietHanhKiemDAO.layDanhSachChiTietHanhKiem(hs.getmahocsinh(),hs.getlop(),hocky);
			String tenhanhkiem = "";
			String xeploai = "";
			int mahanhkiem = 0;
			if (hk.size() > 0) {
				mahanhkiem = ChiTietHanhKiemDAO.layDanhSachChiTietHanhKiem(hs.getmahocsinh(),hs.getlop(),hocky).get(0).getMahanhkiem();
				tenhanhkiem = HanhKiemDAO.findByID(mahanhkiem).get(0).gettenhanhkiem();
				xeploai = DiemDAO.BaoCaoHocKy(hs.getmahocsinh(), hocky, mahanhkiem);
			}
			Object[] items = new Object[] { hs.getmahocsinh(), hs.getten(), hs.getlop(), dtbhk1, tenhanhkiem, xeploai };
			model.addRow(items);
		}
		jtb_dshocsinh.setModel(model);
		jtb_dshocsinh.setRowHeight(30);
		jtb_dshocsinh.getColumnModel().getColumn(0).setPreferredWidth(100);
		jtb_dshocsinh.getColumnModel().getColumn(1).setPreferredWidth(150);
		jtb_dshocsinh.getColumnModel().getColumn(2).setPreferredWidth(100);
		jtb_dshocsinh.getColumnModel().getColumn(3).setPreferredWidth(100);
		jtb_dshocsinh.getColumnModel().getColumn(4).setPreferredWidth(100);
	}

	private void jbt_timkiemActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jbt_timkiemActionPerformed
		// TODO add your handling code here:
		if (jtf_lop.getText().trim().equals("")) {
			JOptionPane.showMessageDialog(this, "Vui Lòng Nhập Thông Tin Tìm Kiếm", "Thông báo",
					JOptionPane.WARNING_MESSAGE);
		} else {
			String hocky = jcb_hocky.getSelectedItem().toString().trim();
			List<HocSinh> listResultSV;
			String[] columns = new String[] { "Mã học sinh", "Họ Tên", "Lớp", "TB: "+jcb_hocky.getSelectedItem(), "Hạnh Kiểm","Xếp Loại" };
			model = new DefaultTableModel(null, columns);

			listResultSV = HocSinhDAO.Timhocsinhcualop(jtf_lop.getText().trim());

			for (int i = 0; i < listResultSV.size(); i++) {
				HocSinh hs = (HocSinh) listResultSV.get(i);

				/* String hk1 = hocky + "_HK1"; */
				List<Diem> DiemHS1 = DiemDAO.DiemCuaHocSinh(hs.getmahocsinh(), hocky);
				float tdhk1 = 0;
				float dtbhk1 = 0;
				if (DiemHS1.size() > 0) {
					for (int j = 0; j < DiemHS1.size(); j++) {
						Diem diem = (Diem) DiemHS1.get(j);
						tdhk1 += diem.getDiemtbmon();
					}

					if (DiemHS1.size() > 0)
						dtbhk1 = tdhk1 / DiemHS1.size();
				}

				
				List<ChiTietHanhKiem> hk = ChiTietHanhKiemDAO.layDanhSachChiTietHanhKiem(hs.getmahocsinh(),hs.getlop(),hocky);
				String tenhanhkiem = "";
				String xeploai = "";
				int mahanhkiem = 0;
				if (hk.size() > 0) {
					mahanhkiem = ChiTietHanhKiemDAO.layDanhSachChiTietHanhKiem(hs.getmahocsinh(),hs.getlop(),hocky).get(0).getMahanhkiem();
					tenhanhkiem = HanhKiemDAO.findByID(mahanhkiem).get(0).gettenhanhkiem();
					xeploai = DiemDAO.BaoCaoHocKy(hs.getmahocsinh(), hocky, mahanhkiem);
				}
				Object[] items = new Object[] { hs.getmahocsinh(), hs.getten(), hs.getlop(), dtbhk1, tenhanhkiem, xeploai };

				model.addRow(items);
			}
			jtb_dshocsinh.setModel(model);
			jtb_dshocsinh.setRowHeight(30);
			/*
			 * jtb_dshocsinh.getColumnModel().getColumn(0).setPreferredWidth(100);
			 * jtb_dshocsinh.getColumnModel().getColumn(1).setPreferredWidth(200);
			 * jtb_dshocsinh.getColumnModel().getColumn(2).setPreferredWidth(150);
			 * jtb_dshocsinh.getColumnModel().getColumn(3).setPreferredWidth(100);
			 * jtb_dshocsinh.getColumnModel().getColumn(4).setPreferredWidth(100);
			 */
		}

	}// GEN-LAST:event_jbt_timkiemActionPerformed

	private void jcb_hockyItemStateChanged(java.awt.event.ItemEvent evt) {// GEN-FIRST:event_jcb_hockyItemStateChanged
		// TODO add your handling code here:
		String hocky="";
		if (jcb_hocky.getSelectedItem()!=null)
		{
			 hocky = jcb_hocky.getSelectedItem().toString().trim();
		}
		List<HocSinh> listResultSV;
		String[] columns = new String[] { "Mã học sinh", "Họ Tên", "Lớp", "TB: "+jcb_hocky.getSelectedItem(), "Hạnh Kiểm","Xếp Loại" };
		model = new DefaultTableModel(null, columns);

		listResultSV = HocSinhDAO.Timhocsinhcualop(jtf_lop.getText().trim());

		for (int i = 0; i < listResultSV.size(); i++) {
			HocSinh hs = (HocSinh) listResultSV.get(i);

			/* String hk1 = hocky + "_HK1"; */
			List<Diem> DiemHS1 = DiemDAO.DiemCuaHocSinh(hs.getmahocsinh(), hocky);
			float tdhk1 = 0;
			float dtbhk1 = 0;
			if (DiemHS1.size() > 0) {
				for (int j = 0; j < DiemHS1.size(); j++) {
					Diem diem = (Diem) DiemHS1.get(j);
					tdhk1 += diem.getDiemtbmon();
				}

				if (DiemHS1.size() > 0)
					dtbhk1 = tdhk1 / DiemHS1.size();
			}

		
			List<ChiTietHanhKiem> hk = ChiTietHanhKiemDAO.layDanhSachChiTietHanhKiem(hs.getmahocsinh(),hs.getlop(),hocky);
			String tenhanhkiem = "";
			String xeploai = "";
			int mahanhkiem = 0;
			if (hk.size() > 0) {
				mahanhkiem = ChiTietHanhKiemDAO.layDanhSachChiTietHanhKiem(hs.getmahocsinh(),hs.getlop(),hocky).get(0).getMahanhkiem();
				tenhanhkiem = HanhKiemDAO.findByID(mahanhkiem).get(0).gettenhanhkiem();
				xeploai = DiemDAO.BaoCaoHocKy(hs.getmahocsinh(), hocky, mahanhkiem);
			}
			Object[] items = new Object[] { hs.getmahocsinh(), hs.getten(), hs.getlop(), dtbhk1, tenhanhkiem, xeploai };

			model.addRow(items);
		}
		jtb_dshocsinh.setModel(model);
		jtb_dshocsinh.setRowHeight(30);
		/*
		 * jtb_dshocsinh.getColumnModel().getColumn(0).setPreferredWidth(100);
		 * jtb_dshocsinh.getColumnModel().getColumn(1).setPreferredWidth(200);
		 * jtb_dshocsinh.getColumnModel().getColumn(2).setPreferredWidth(150);
		 * jtb_dshocsinh.getColumnModel().getColumn(3).setPreferredWidth(100);
		 * jtb_dshocsinh.getColumnModel().getColumn(4).setPreferredWidth(100);
		 */
	}// GEN-LAST:event_jcb_hockyItemStateChanged

	private void jbtn_thoat2ActionPerformed(java.awt.event.ActionEvent evt) {// GEN-FIRST:event_jbtn_thoat2ActionPerformed
		// TODO add your handling code here:
		setVisible(false); // you can't see me!
		dispose();
	}// GEN-LAST:event_jbtn_thoat2ActionPerformed

	/**
	 * @param args the command line arguments
	 */
	public static void main(String args[]) {
		/* Set the Nimbus look and feel */
		// <editor-fold defaultstate="collapsed" desc=" Look and feel setting code
		// (optional) ">
		/*
		 * If Nimbus (introduced in Java SE 6) is not available, stay with the default
		 * look and feel. For details see
		 * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
		 */
		try {
			for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
				if ("Nimbus".equals(info.getName())) {
					javax.swing.UIManager.setLookAndFeel(info.getClassName());
					break;
				}
			}
		} catch (ClassNotFoundException ex) {
			java.util.logging.Logger.getLogger(XepLoai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (InstantiationException ex) {
			java.util.logging.Logger.getLogger(XepLoai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (IllegalAccessException ex) {
			java.util.logging.Logger.getLogger(XepLoai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		} catch (javax.swing.UnsupportedLookAndFeelException ex) {
			java.util.logging.Logger.getLogger(XepLoai.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
		}
		// </editor-fold>

		/* Create and display the form */
		java.awt.EventQueue.invokeLater(new Runnable() {
			public void run() {
				new XepLoai().setVisible(true);
			}
		});
	}

	// Variables declaration - do not modify//GEN-BEGIN:variables
	private javax.swing.JLabel jLabel1;
	private javax.swing.JLabel jLabel2;
	private javax.swing.JLabel jLabel3;
	private javax.swing.JPanel jPanel1;
	private javax.swing.JPanel jPanel2;
	private javax.swing.JScrollPane jScrollPane1;
	private javax.swing.JButton jbt_timkiem;
	private javax.swing.JButton jbtn_thoat2;
	private javax.swing.JComboBox jcb_hocky;
	private javax.swing.JComboBox jcb_hanhkiem;
	private javax.swing.JTable jtb_dshocsinh;
	private javax.swing.JTextField jtf_lop;
	private JLabel lblHnhKim;
	private JTextField jtf_mahocsinh;
}
