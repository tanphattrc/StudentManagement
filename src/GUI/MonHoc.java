/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package GUI;

import java.util.List;

import javax.swing.GroupLayout;
import javax.swing.GroupLayout.Alignment;
import javax.swing.JOptionPane;
import javax.swing.LayoutStyle.ComponentPlacement;
import javax.swing.table.DefaultTableModel;

import DAO.MonDAO;
import Entity.Mon;

/**
 *
 * @author Thắng
 */
public class MonHoc extends javax.swing.JFrame {

     DefaultTableModel model=null;
    /**
     * Creates new form MonHoc
     */
    public MonHoc() {
        initComponents();
        setResizable(false); 
        LoadData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtf_mamon = new javax.swing.JTextField();
        jtb_them = new javax.swing.JButton();
        jtb_xoa = new javax.swing.JButton();
        btnThoat = new javax.swing.JButton();
        jtf_tenmon = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jtb_sua = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtb_monhoc = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Môn Học");

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setPreferredSize(new java.awt.Dimension(840, 240));

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("MÔN HỌC");

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel2.setText("Mã Môn");

        jtb_them.setBackground(new java.awt.Color(255, 51, 0));
        jtb_them.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtb_them.setText("Thêm");
        jtb_them.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtb_themActionPerformed(evt);
            }
        });

        jtb_xoa.setBackground(new java.awt.Color(255, 51, 0));
        jtb_xoa.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtb_xoa.setText("XÓA");
        jtb_xoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtb_xoaActionPerformed(evt);
            }
        });

        btnThoat.setBackground(new java.awt.Color(255, 51, 0));
        btnThoat.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnThoat.setText("THOÁT");
        btnThoat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThoatActionPerformed(evt);
            }
        });

        jtf_tenmon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtf_tenmonActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel3.setText("TÊN MÔN HỌC");

        jtb_sua.setBackground(new java.awt.Color(255, 51, 0));
        jtb_sua.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jtb_sua.setText("Sữa");
        jtb_sua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jtb_suaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1Layout.setHorizontalGroup(
        	jPanel1Layout.createParallelGroup(Alignment.TRAILING)
        		.addGroup(jPanel1Layout.createSequentialGroup()
        			.addGap(12)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING)
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addGroup(jPanel1Layout.createParallelGroup(Alignment.TRAILING, false)
        						.addGroup(jPanel1Layout.createSequentialGroup()
        							.addComponent(jLabel2)
        							.addPreferredGap(ComponentPlacement.RELATED, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        							.addComponent(jtf_mamon, GroupLayout.PREFERRED_SIZE, 190, GroupLayout.PREFERRED_SIZE))
        						.addGroup(jPanel1Layout.createSequentialGroup()
        							.addComponent(jLabel3)
        							.addGap(18)
        							.addComponent(jtf_tenmon, GroupLayout.PREFERRED_SIZE, 190, GroupLayout.PREFERRED_SIZE)))
        					.addGap(43))
        				.addGroup(jPanel1Layout.createSequentialGroup()
        					.addComponent(jtb_them, GroupLayout.PREFERRED_SIZE, 85, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(jtb_sua, GroupLayout.PREFERRED_SIZE, 89, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(jtb_xoa, GroupLayout.PREFERRED_SIZE, 89, GroupLayout.PREFERRED_SIZE)
        					.addPreferredGap(ComponentPlacement.RELATED)
        					.addComponent(btnThoat, GroupLayout.PREFERRED_SIZE, 93, GroupLayout.PREFERRED_SIZE)
        					.addGap(0, 0, Short.MAX_VALUE)))
        			.addContainerGap())
        		.addGroup(jPanel1Layout.createSequentialGroup()
        			.addContainerGap(220, Short.MAX_VALUE)
        			.addComponent(jLabel1)
        			.addGap(111))
        );
        jPanel1Layout.setVerticalGroup(
        	jPanel1Layout.createParallelGroup(Alignment.LEADING)
        		.addGroup(jPanel1Layout.createSequentialGroup()
        			.addGap(25)
        			.addComponent(jLabel1)
        			.addGap(32)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jtf_mamon, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel2))
        			.addGap(18)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(jtf_tenmon, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jLabel3))
        			.addGap(33)
        			.addGroup(jPanel1Layout.createParallelGroup(Alignment.BASELINE)
        				.addComponent(btnThoat, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jtb_them, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jtb_sua, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE)
        				.addComponent(jtb_xoa, GroupLayout.PREFERRED_SIZE, 31, GroupLayout.PREFERRED_SIZE))
        			.addContainerGap(38, Short.MAX_VALUE))
        );
        jPanel1.setLayout(jPanel1Layout);

        jtb_monhoc.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "STT", "TÊN MÔN"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jtb_monhoc.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jtb_monhocMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jtb_monhoc);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 398, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 437, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

     void LoadData() {
       
        List<Mon> listMon;
        String[] columns = new String [] {
            "STT",
            "Mã môn học",
            "Tên môn học"         
        };
        model = new DefaultTableModel(null , columns);
        
        listMon = MonDAO.layDanhSachMon();
        
        for (int i = 0; i < listMon.size(); i++) {
            Mon mon = (Mon) listMon.get(i);
            int stt = i;
            Object[] items = new Object[] {
                ++stt,
                mon.getmamon(),
                mon.gettenmon()
            };
            model.addRow(items);  
        }
        jtb_monhoc.setModel(model);
        jtb_monhoc.setRowHeight(30);
        jtb_monhoc.getColumnModel().getColumn(0).setPreferredWidth(100);
        jtb_monhoc.getColumnModel().getColumn(1).setPreferredWidth(200);
        jtb_monhoc.getColumnModel().getColumn(2).setPreferredWidth(150);

    }
    
    private void btnThoatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThoatActionPerformed
        // TODO add your handling code here:
        setVisible(false); //you can't see me!
        dispose();
    }//GEN-LAST:event_btnThoatActionPerformed

    private void jtb_xoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtb_xoaActionPerformed
        // TODO add your handling code here:
        if(jtf_mamon.getText().trim().equals(""))
        {
             JOptionPane.showMessageDialog(this, "Bạn cần chọn mã môn học cần xóa", "Thông báo", JOptionPane.WARNING_MESSAGE);
        }
        else
        {
             String mamon = jtf_mamon.getText().trim();
            boolean result = MonDAO.xoaMon(mamon);
            if (result) {
            	 JOptionPane.showMessageDialog(this, "Xóa thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                LoadData();
                Moi() ;
            } else {
                JOptionPane.showMessageDialog(this, "Xóa thất bại", "Thông báo", JOptionPane.WARNING_MESSAGE);
            }
        }
       
    }//GEN-LAST:event_jtb_xoaActionPerformed

    private void jtf_tenmonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtf_tenmonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jtf_tenmonActionPerformed

     void Moi() {
         jtf_mamon.setText(null);
        jtf_tenmon.setText(null);         
     }
     
    boolean kiemtra()
    {
        boolean flag = false;
        if(jtf_mamon.getText().trim().equals(""))
            return flag;
        else if(jtf_tenmon.getText().trim().equals(""))
            return flag;
        flag = true;
        return flag;
    }
    private void jtb_themActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtb_themActionPerformed
        // TODO add your handling code here:
        if(kiemtra())
        {
            String mamon = jtf_mamon.getText().trim();
            String tenmon = jtf_tenmon.getText();
            Mon mon = new Mon(mamon, tenmon);
            String result = MonDAO.themMon(mon);
            if (result.equals("true")) {       
            	 JOptionPane.showMessageDialog(this, "Thêm thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                LoadData();
                Moi();
                
            } else {
            	if(result.contains("Duplicate entry") && result.contains("for key 'mon.tenmon'"))
            	{
            		  JOptionPane.showMessageDialog(this, "Thêm thất bại \n Tên môn học không được trùng", "Thông báo", JOptionPane.WARNING_MESSAGE);
            	}
            	if (result.equals("Mã môn đã tồn tại"))
            	{
            		JOptionPane.showMessageDialog(this, "Thêm thất bại \n" + result + "", "Thông báo", JOptionPane.WARNING_MESSAGE);
            	}
            	else
            	{
            		JOptionPane.showMessageDialog(this, "Thêm thất bại", "Thông báo", JOptionPane.WARNING_MESSAGE);
            	}
                
            }
        }
        else 
             JOptionPane.showMessageDialog(this, "Bạn Cần Nhập Đầy Đủ Thông Tín !", "Thông báo", JOptionPane.WARNING_MESSAGE);
        
    
    }//GEN-LAST:event_jtb_themActionPerformed

    private void jtb_monhocMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jtb_monhocMouseClicked
        // TODO add your handling code here:
        int index=jtb_monhoc.getSelectedRow();
        jtf_mamon.setText((String)(model.getValueAt(index, 1)));
        jtf_tenmon.setText((String)(model.getValueAt(index, 2)));
    }//GEN-LAST:event_jtb_monhocMouseClicked

    private void jtb_suaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jtb_suaActionPerformed
        // TODO add your handling code here:
         if(kiemtra())
        {
             String mamon = jtf_mamon.getText().trim();
             
            String tenmon = jtf_tenmon.getText();
            Mon mon = new Mon(mamon, tenmon);
            String result = MonDAO.capNhatMon(mon);
            if (result.equals("true")) {           
            	JOptionPane.showMessageDialog(this, "Cập nhật thành công", "Thông báo", JOptionPane.INFORMATION_MESSAGE);
                LoadData();
                Moi();
            } else {
            	if(result.contains("Duplicate entry") && result.contains("for key 'mon.tenmon'"))
            	{
            		  JOptionPane.showMessageDialog(this, "Sửa thất bại \n Tên môn học hoặc mã môn không được trùng", "Thông báo", JOptionPane.WARNING_MESSAGE);
            	}
            	else
            	{
            		JOptionPane.showMessageDialog(this, "Sửa thất bại", "Thông báo", JOptionPane.WARNING_MESSAGE);
            	}
                
            }
        }
        else 
             JOptionPane.showMessageDialog(this, "Bạn Cần Nhập Đầy Đủ Thông Tín !", "Thông báo", JOptionPane.WARNING_MESSAGE);
        
        
       
    }//GEN-LAST:event_jtb_suaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MonHoc.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MonHoc().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnThoat;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jtb_monhoc;
    private javax.swing.JButton jtb_sua;
    private javax.swing.JButton jtb_them;
    private javax.swing.JButton jtb_xoa;
    private javax.swing.JTextField jtf_mamon;
    private javax.swing.JTextField jtf_tenmon;
    // End of variables declaration//GEN-END:variables
}
